
server:
  port: 8781
#注册中心的服务名
spring:
  application:
    name: zuul-server
  cloud:
    inetutils:
      preferred-networks:
        - 10.0
  redis:
    host: 192.168.13.48
  aop:
    proxy-target-class: true
#  kafka:
#    # 指定kafka 代理地址，可以多个
#    bootstrap-servers: 192.168.13.48:9092
#    producer:
#      retries: 2
#      # 每次批量发送消息的数量
#      batch-size: 16384
#      # 缓存容量
#      buffer-memory: 33554432
#      # 指定消息key和消息体的编解码方式
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    consumer:
#      # 指定默认消费者group id
#      group-id: consumer-tutorial
##      auto-commit-interval:
#      auto-offset-reset: earliest
#      enable-auto-commit: true
#      # 指定消息key和消息体的编解码方式
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#    # 指定listener 容器中的线程数，用于提高并发量
#    listener:
#      concurrency: 1


  zipkin:
    sender:
      type: web
    base-url: http://192.168.13.48:9411
  sleuth:
    sampler:
      probability: 1


eureka:
  client:
    serviceUrl:
#      defaultZone: http://eureka-server:8761/eureka/
      defaultZone: ${ADDITIONAL_EUREKA_SERVER_LIST}
  instance:
    hostname: zuul-server #约定和swarm服务名对应,其实没啥作用
    prefer-ip-address: true #注册中心,注册的是ip
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}

zuul:
#是否开启重试功能
  ratelimit:
    key-prefix: PREFIX
    enabled: true
    repository: REDIS
    behind-proxy: true
    default-policy-list: #optional - will apply unless specific policy exists
    - limit: 2000 #optional - request number limit per refresh interval window
      quota: 1000 #optional - request time limit per refresh interval window (in seconds)
      refresh-interval: 60 #default value (in seconds)
      type: #optional
      - user
#      - origin
#      - url
#      - httpmethod
    policy-list:
      movie-server:
      - limit: 10 #optional - request number limit per refresh interval window
        quota: 100 #optional - request time limit per refresh interval window (in seconds)
        refresh-interval: 60 #default value (in seconds)
        type: #optional
        - user
#        - origin
#        - url=/api
        - url
#      - type: #optional value for each type
#        - user=anonymous
#        - origin=somemachine.com
#        - url=/api #url prefix
#        - role=user
#        - httpmethod=get #case insensitive

  routes:
    user-server:
      path: /uaa/**
      sensitiveHeaders:
      serviceId: user-server
    movie-server:
      path: /movie-server/**
      sensitiveHeaders:
      serviceId: movie-server
  #    add-proxy-headers: true
  retryable: true



  #对当前服务的重试次数
ribbon:
  MaxAutoRetries: 0
  #切换相同Server的次数
  MaxAutoRetriesNextServer: 1

security:
  oauth2:
    client:
      access-token-uri: http://localhost:8081/oauth/token
      user-authorization-uri: http://localhost:8081/oauth/authorize
      client-id: webapp
    resource:
      user-info-uri: http://localhost:8081/v001/user/user
      prefer-token-info: false


  #监控
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

  #log
logging:
  level:
    root: info
#mysql 日志
#logging.level.com.yimi.product.mapper=DEBUG
logging.level.org.springframework.security: DEBUG

logging.leve.org.springframework: DEBUG
#路由规则

#kafka 配置

